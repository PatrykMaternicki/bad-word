{"version":3,"sources":["components/Form.js","store/game/types.js","store/game/reducers.js","store/game/actions.js","store/game/index.js","containers/Main.js","components/Item.js","components/Game.js","containers/Game.js","containers/Score.js","App.js","store/index.js","index.js"],"names":["GameForm","state","nickName","handleSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","props","handleNickName","handleChange","target","value","setState","setDisabled","length","className","Form","onSubmit","this","Group","controlId","Control","required","type","onChange","placeholder","Button","disabled","variant","Component","defaultProps","GAME_PICK","GAME_SET_NICK_NAME","GAME_SET_STATE","GAME_GENERATE_CHUNKS","GAME_GENERATE_CLASSES","GAME_SET_POINT","CLASSES_OPTIONS","0","1","2","setClassName","classes","indexFlexOption","Math","floor","random","Object","keys","INIT_STATE","played","pickedGameSet","clickedWords","gameSets","GameSets","chunks","wordsPerRow","results","TYPES","item","gameReducers","action","gameStockCount","indexGameSet","all_words","makeChunk","map","MainContainer","startGame","setNickName","pickGame","setStateGame","generateChunks","generateClasses","history","push","connect","dispatch","GameActions","Item","checked","setVariant","finished","setFinishedClass","setCheckedClass","isBadWord","baseClass","setAnswer","setPoint","word","handleClick","onClick","setItem","removeItem","Game","toggleGameState","toggleText","generateRows","generatedComponent","gameSet","i","good_words","indexOf","question","nextPage","compose","withRouter","result","GameContainer","game","useHistory","useEffect","unCheckedCorrectResults","filter","checkedUnCorrectResults","calcPoints","App","Container","Row","Col","xs","sm","path","component","exact","ScoreContainer","createReducer","combineReducers","GameReducer","defineProperty","Array","prototype","chunkSize","array","concat","apply","elem","slice","createBrowserHistory","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e87cee5.chunk.js","sourcesContent":["import Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Component } from 'react'\r\n\r\nexport default class GameForm extends Component {\r\n\r\n  static defaultProps = {\r\n    handleNickName: null\r\n  }\r\n\r\n  state = {\r\n    nickName: ''\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    event.currentTarget.checkValidity() && this.props.handleNickName(this.state.nickName)\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let { nickName } = this.state\r\n    nickName = event.target.value\r\n    this.setState({nickName})\r\n  }\r\n\r\n  setDisabled = () => this.state.nickName.length > 0 ? false : true\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n      <h1 className=\"h5 text-center\">WorkCloud Game</h1>\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            required \r\n            type=\"text\" \r\n            value={this.state.nickName}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter your nickname here\"\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          disabled={this.setDisabled()} \r\n          className=\"d-block ml-auto mr-auto pr-4 pl-4\" \r\n          variant=\"outline-primary\" \r\n          type=\"submit\"\r\n        >\r\n          play\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n    )\r\n  }\r\n}","const GAME_PICK = \"GAME_PICK\"\r\nconst GAME_SET_NICK_NAME = \"GAME_SET_NICK_NAME\"\r\nconst GAME_SET_STATE = \"GAME_SET_STATE\"\r\nconst GAME_GENERATE_CHUNKS = \"GAME_GENERATE_CHUNKS\"\r\nconst GAME_GENERATE_CLASSES = \"GAME_GENERATE_CLASSES\"\r\nconst GAME_SET_POINT = \"GAME_SET_POINT\"\r\n\r\nexport default {\r\n  GAME_PICK,\r\n  GAME_SET_NICK_NAME,\r\n  GAME_SET_STATE,\r\n  GAME_GENERATE_CHUNKS,\r\n  GAME_GENERATE_CLASSES,\r\n  GAME_SET_POINT\r\n}","import { default as TYPES } from './types';\r\nimport GameSets from '../../dictionaries/game_data.json'\r\n\r\nconst CLASSES_OPTIONS = {\r\n  0: 'justify-content-between',\r\n  1: 'justify-content-evenly',\r\n  2: 'justify-content-around'\r\n}\r\n\r\nconst setClassName = () => {\r\n  let classes = 'd-flex mt-2 mb-2'\r\n  let indexFlexOption = Math.floor(Math.random() * Object.keys(CLASSES_OPTIONS).length) + 0\r\n  classes = `${classes} ${CLASSES_OPTIONS[indexFlexOption]}`\r\n  return classes\r\n}\r\n\r\n\r\nconst INIT_STATE = {\r\n  played: false,\r\n  nickName: '',\r\n  pickedGameSet: null,\r\n  clickedWords: [],\r\n  gameSets: GameSets,\r\n  chunks: [],\r\n  wordsPerRow: 3,\r\n  classes: [],\r\n  results: []\r\n};\r\n\r\nconst gameReducers = (state = INIT_STATE, action) =>\r\n{\r\n  switch(action.type) {\r\n    case TYPES.GAME_PICK: {\r\n      const gameStockCount = state.gameSets.length\r\n      const indexGameSet = Math.floor(Math.random() * gameStockCount) + 0\r\n      return {\r\n        ...state, pickedGameSet: state.gameSets[indexGameSet]\r\n      }\r\n    }\r\n    case TYPES.GAME_GENERATE_CHUNKS: {\r\n      const chunks = state.pickedGameSet.all_words.makeChunk(state.wordsPerRow)\r\n      return {\r\n        ...state, chunks: chunks\r\n      }\r\n    }\r\n    case TYPES.GAME_GENERATE_CLASSES: {\r\n      const classes = state.chunks.map(() => setClassName(state.chunks.length))\r\n      return {\r\n        ...state, classes: classes\r\n      }\r\n    }\r\n    case TYPES.GAME_SET_POINT: {\r\n      return {\r\n        ...state, results: [...state.results, action.item]\r\n      }\r\n    }\r\n    case TYPES.GAME_SET_NICK_NAME: {\r\n      return {\r\n        ...state, nickName: action.item\r\n      }\r\n    }\r\n    case TYPES.GAME_SET_STATE: {\r\n      return {\r\n        ...state, played: action.item\r\n      }\r\n    }\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\nexport default gameReducers","import { default as TYPES } from './types';\r\n\r\nconst pickGame = () => ({\r\n  type: TYPES.GAME_PICK\r\n});\r\n\r\nconst setNickName = (item) => ({\r\n  type: TYPES.GAME_SET_NICK_NAME, item\r\n})\r\n\r\nconst setStateGame = (item) => ({\r\n  type: TYPES.GAME_SET_STATE , item\r\n})\r\n\r\nconst setItem = (item) => ({\r\n  type: TYPES.GAME_SET_ITEM, item\r\n})\r\n\r\nconst removeItem = (item) => ({\r\n  type: TYPES.GAME_REMOVE_ITEM, item\r\n})\r\n\r\nconst generateChunks = () => ({\r\n  type: TYPES.GAME_GENERATE_CHUNKS\r\n})\r\n\r\nconst generateClasses = () => ({\r\n  type: TYPES.GAME_GENERATE_CLASSES\r\n})\r\n\r\nconst setPoint = (item) => ({\r\n  type: TYPES.GAME_SET_POINT, item\r\n})\r\n\r\nexport default {\r\n  pickGame,\r\n  setNickName,\r\n  setStateGame,\r\n  setItem,\r\n  removeItem,\r\n  generateChunks,\r\n  generateClasses,\r\n  setPoint\r\n}","import gameReducers from './reducers';\r\nexport {default as GameTypes } from './types';\r\nexport {default as GameActions } from './actions';\r\nexport default gameReducers;","\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from '../components/Form'\r\nimport { GameActions } from '../store/game'\r\n\r\nclass MainContainer extends Component {\r\n  startGame = (nickName) => {\r\n    this.props.setNickName(nickName)\r\n    this.props.pickGame()\r\n    this.props.setStateGame(true)\r\n    this.props.generateChunks()\r\n    this.props.generateClasses()\r\n    this.props.history.push('/game')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form handleNickName={this.startGame}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setNickName: (nickName) =>  dispatch(GameActions.setNickName(nickName)),\r\n  pickGame: () => dispatch(GameActions.pickGame()),\r\n  setStateGame: (state) => dispatch(GameActions.setStateGame(state)),\r\n  generateChunks: () => dispatch(GameActions.generateChunks()),\r\n  generateClasses: () => dispatch(GameActions.generateClasses()) \r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(MainContainer)","import { Component } from 'react'\r\n\r\nexport default class Item extends Component {\r\n  static defaultProps = {\r\n    setPoint: null,\r\n    word: null,\r\n    isBadWord: false,\r\n    setItem: null,\r\n    removeItem: null,\r\n    finished: false,\r\n  }\r\n  \r\n  state = {\r\n    checked: false,\r\n  }\r\n\r\n  setVariant = () => {\r\n    if (this.props.finished && this.state.checked) {\r\n      return this.setFinishedClass()\r\n    } else {\r\n      return this.setCheckedClass()\r\n    }\r\n  }\r\n  \r\n\r\n  setFinishedClass = () => {\r\n    const { isBadWord, baseClass } = this.props\r\n    return isBadWord ? 'text-success text-bold cursor-pointer' : 'text-danger text-bold cursor-pointer'\r\n  }\r\n\r\n  setAnswer = () => {\r\n    const { finished, isBadWord } = this.props\r\n    if(this.state.checked && finished) {\r\n      return isBadWord ? 'Good' : 'Bad'\r\n    }\r\n  }\r\n\r\n  setPoint = (word, isBadWord) => {\r\n    const checked = this.state.checked\r\n    this.props.setPoint({checked, word, isBadWord})\r\n  }\r\n\r\n  setCheckedClass = () => this.state.checked ? 'text-black-50 cursor-pointer' : 'text-dark cursor-pointer'\r\n\r\n  handleClick = () => {\r\n    if(!this.props.finished) {\r\n      const checked = !this.state.checked\r\n      this.setState({checked})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { word, finished, isBadWord } = this.props\r\n    finished && this.setPoint(word, isBadWord)\r\n    return(\r\n      <span onClick={this.handleClick} className={this.setVariant()}>\r\n        <p className=\"line-5 text-center mb-0\"><strong>{this.setAnswer()}</strong></p>\r\n        {word}\r\n      </span>\r\n    )\r\n  }\r\n}","import { Component } from 'react'\r\nimport Item from './Item'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { GameActions } from '../store/game/'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Game extends Component {\r\n  static defaultProps = {\r\n    gameSet: null,\r\n    nextPage: null,\r\n    chunks: [],\r\n    classes: [],\r\n  }\r\n\r\n  state = {\r\n    finished: false\r\n  }\r\n\r\n  toggleGameState = () => {\r\n    const { finished } = this.state\r\n    if(!finished) {\r\n      this.setState({finished: !finished })\r\n    } else {\r\n      this.props.history.push('/score')\r\n    }\r\n  }\r\n\r\n  toggleText = () => {\r\n    return this.state.finished ? 'finish game' : 'check answers'\r\n  }\r\n\r\n  generateRows = () => {\r\n    let generatedComponent = []\r\n    const { chunks, classes, gameSet } = this.props\r\n    const { finished } = this.state\r\n    for (let i = 0; i < chunks.length; i++) {\r\n      generatedComponent.push(\r\n        <div key={i} className={classes[i]}>\r\n          {chunks[i].map(word =>\r\n            <Item\r\n              key={word} \r\n              word={word} \r\n              finished={finished}\r\n              isBadWord={gameSet.good_words.indexOf(word) > -1}\r\n              setPoint={this.props.setPoint}\r\n            />\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return generatedComponent\r\n  }\r\n\r\n  render() {\r\n    const { question } = this.props.gameSet\r\n    return(\r\n      <div>\r\n        <h1 className=\"h5 text-center\">{ question }</h1>\r\n        <div className=\"border border-dark pr-4 pl-4 pt-4 pb-4\">\r\n          {this.generateRows()}\r\n        </div>  \r\n        <Button\r\n          className=\"d-block ml-auto mr-auto mt-4 pr-4 pl-4\" \r\n          variant=\"outline-primary\"\r\n          onClick={this.toggleGameState} \r\n        >\r\n          {this.toggleText()}\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setPoint: (result) => dispatch(GameActions.setPoint(result))\r\n})\r\n\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(null, mapDispatchToProps)\r\n)(Game)","import { connect } from 'react-redux'\r\nimport { Component } from 'react'\r\nimport Game from '../components/Game'\r\n\r\nclass GameContainer extends Component {\r\n  render() {\r\n    const { gameSet, chunks, classes, played } = this.props\r\n    !played && this.props.history.push('/')\r\n    return (\r\n      played && <Game \r\n        gameSet={gameSet}\r\n        chunks={chunks}\r\n        classes={classes}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  gameSet: state.game.pickedGameSet,\r\n  chunks: state.game.chunks,\r\n  classes: state.game.classes,\r\n  played: state.game.played\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(GameContainer)","import { connect } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst ScoreContainer = ({nickName, results, played}) => {\r\n  const history = useHistory()\r\n  useEffect(() => !played && history.push('/'))\r\n  const calcPoints = () => {\r\n    const unCheckedCorrectResults = results.filter(result => !result.checked && result.isBadWord)\r\n    const checkedUnCorrectResults = results.filter(result => result.checked && !result.isBadWord)\r\n    const checkedCorrectResults = results.filter(result => result.checked && result.isBadWord)\r\n    return (checkedCorrectResults.length * 2) - (checkedUnCorrectResults.length + unCheckedCorrectResults.length)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1 className=\"h5 text-center\">Congratulations, {nickName}</h1>\r\n      <h2 className=\"h6 text-center\">Your Score</h2>\r\n      <p className=\"text-primary text-center\">\r\n        <strong>{calcPoints()}</strong>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  nickName: state.game.nickName,\r\n  results: state.game.results,\r\n  played: state.game.played\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(ScoreContainer)","import MainContainer from './containers/Main.js'\nimport GameContainer from './containers/Game.js'\nimport ScoreContainer from './containers/Score.js'\nimport { Switch, Route } from 'react-router-dom'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\n\nfunction App() {\n  return (\n    <Container>\n      <div className=\"d-flex align-items-center justify-content-center flex-wrap vh-100\">\n        <Row className=\"w-100 justify-content-center\">\n          <Col xs={12} sm={8}>\n            <Switch>\n              <Route path=\"/\" component={MainContainer} exact/>\n              <Route path=\"/game\" component={GameContainer} />\n              <Route path=\"/score\" component={ScoreContainer} />\n              <Route path='*' component={MainContainer} />\n            </Switch>\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport GameReducer from './game';\r\n\r\nconst createReducer = () => combineReducers({\r\n  game: GameReducer\r\n})\r\n\r\nexport default createReducer;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport createReducer  from './store'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nObject.defineProperty(Array.prototype, 'makeChunk', {\n  value: function(chunkSize) {\n    var array = this;\n    return [].concat.apply([],\n      array.map(function(elem, i) {\n        return i % chunkSize ? [] : [array.slice(i, i + chunkSize)];\n      })\n    );\n  }\n});\n\nconst history = createBrowserHistory()\nconst store = createStore(createReducer())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}